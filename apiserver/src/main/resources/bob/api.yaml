openapi: "3.0.0"

info:
  title: Bob the Builder
  version: "0.1.0"
  description: The modular, extensible CI/CD platform

paths:
  /api.yaml:
    get:
      operationId: GetApiSpec
      summary: Returns the OpenAPI spec

      responses:
        "200":
          description: Returns the spec
          content:
            application/yaml:
              schema:
                type: string

  /can-we-build-it:
    get:
      operationId: HealthCheck
      summary: Runs health checks for Bob

      responses:
        "200":
          description: Successful health check
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                healthy:
                  value:
                    message: "Yes we can! ðŸ”¨ ðŸ”¨"

        default:
          description: Failed health check
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                unhealthy:
                  value:
                    message: "Health check failed: Postgres not healthy"

  /pipelines/groups/{group}/names/{name}:
    post:
      operationId: PipelineCreate
      summary: Creates a new pipeline

      parameters:
        - name: group
          required: true
          in: path
          description: The group of the pipeline
          schema:
            type: string
        - name: name
          required: true
          in: path
          description: The name of the pipeline
          schema:
            type: string

      requestBody:
        description: The pipeline schema definition
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pipeline"
            examples:
              pipeline:
                value:
                  image: gradle:jdk11
                  vars:
                    LOG_LEVEL: error
                  steps:
                    - cmd: echo build started.
                    - needs_resource: source-code
                      cmd: gradle test
                    - cmd: gradle shadowJar
                      produces_artifact:
                        name: uberjar
                        path: build/libs/bob-example-1.0-SNAPSHOT-all.jar
                        store: local
                  resources:
                    - name: source-code
                      type: external
                      provider: git
                      params:
                        repo: https://github.com/lispyclouds/bob-example
                        branch: main

      responses:
        "202":
          description: Successful creation of the pipeline
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                success:
                  value:
                    message: "Ok"
        default:
          description: Failed creation of the pipeline
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                failure:
                  value:
                    message: "Pipeline creation error: Check params or if its already created"
    delete:
      operationId: PipelineDelete
      summary: Deletes a pipeline

      parameters:
        - name: group
          required: true
          in: path
          description: The group of the pipeline
          schema:
            type: string
        - name: name
          required: true
          in: path
          description: The name of the pipeline
          schema:
            type: string

      responses:
        "202":
          description: Successful deletion of the pipeline
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                success:
                  value:
                    message: "Ok"

  /pipelines/start/groups/{group}/names/{name}:
    post:
      operationId: PipelineStart
      summary: Starts a pipeline

      parameters:
        - name: group
          required: true
          in: path
          description: The group of the pipeline
          schema:
            type: string
        - name: name
          required: true
          in: path
          description: The name of the pipeline
          schema:
            type: string

      responses:
        "202":
          description: Successfully start the pipeline
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                success:
                  value:
                    message: "Ok"

  /pipelines/stop/groups/{group}/names/{name}/runs/{id}:
    post:
      operationId: PipelineStop
      summary: Stops a pipeline

      parameters:
        - name: group
          required: true
          in: path
          description: The group of the pipeline
          schema:
            type: string
        - name: name
          required: true
          in: path
          description: The name of the pipeline
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: The id of the pipeline run
          schema:
            type: string

      responses:
        "202":
          description: Successful stopping of the pipeline
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                success:
                  value:
                    message: "Ok"

  /pipelines/logs/runs/{id}/offset/{offset}/lines/{lines}:
    get:
      operationId: PipelineLogs
      summary: Fetches the logs of a pipeline

      parameters:
        - name: id
          required: true
          in: path
          description: The id of the pipeline run
          schema:
            type: string
        - name: offset
          required: true
          in: path
          description: The starting line of the logs
          schema:
            type: integer
        - name: lines
          required: true
          in: path
          description: The number of lines from the starting line
          schema:
            type: integer

      responses:
        "200":
          description: Logs of the pipeline run
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PipelineLogsResponse"
              examples:
                success:
                  value:
                    message:
                      - "[bob] log line 1"
                      - "log line 2"
                      - "log line 3"
                      - "log line 4"
                      - "[bob] log line 5"
                      - "log line 6"
        default:
          description: Failed log fetch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                failure:
                  value:
                    message: "<some error message>"

  /pipelines/status/runs/{id}:
    get:
      operationId: PipelineStatus
      summary: Fetches the status of the pipeline

      parameters:
        - name: id
          required: true
          in: path
          description: The id of the pipeline run
          schema:
            type: string

      responses:
        "200":
          description: Successful status fetch of the pipeline
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusResponse"
              examples:
                passed:
                  value:
                    message: "passed"
                running:
                  value:
                    message: "running"
                failed:
                  value:
                    message: "failed"
                stopped:
                  value:
                    message: "stopped"
        "404":
          description: Cannot find status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                failure:
                  value:
                    message: "Cannot find status"
        default:
          description: Failed status fetch of the pipeline
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                failure:
                  value:
                    message: "<some error message>"

  /pipelines/groups/{group}/names/{name}/runs/{id}/artifact-stores/{store-name}/artifact/{artifact-name}:
    get:
      operationId: PipelineArtifactFetch
      summary: Fetches the artifact from pipeline of an artifact store

      parameters:
        - name: group
          required: true
          in: path
          description: The group of the pipeline
          schema:
            type: string
        - name: name
          required: true
          in: path
          description: The name of the pipeline
          schema:
            type: string
        - name: id
          required: true
          in: path
          description: The id of the pipeline run
          schema:
            type: string
        - name: store-name
          required: true
          in: path
          description: The store from which the artifact is to be fetched
          schema:
            type: string
        - name: artifact-name
          required: true
          in: path
          description: The name of the artifact to fetch
          schema:
            type: string

      responses:
        "200":
          description: The TAR archive of the artifact
          content:
            application/tar:
              schema:
                type: string
                format: binary
        default:
          description: Failed artifact fetch
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                failure:
                  value:
                    message: "<some error message>"

  /pipelines:
    get:
      operationId: PipelineList
      summary: List all pipelines filtered by group, name and status. Case sensitive.

      parameters:
        - name: group
          required: false
          in: query
          description: The group of the pipeline
          schema:
            type: string
        - name: name
          required: false
          in: query
          description: The name of the pipeline
          schema:
            type: string
        - name: status
          required: false
          in: query
          description: The status of the pipeline
          schema:
            type: string

      responses:
        "200":
          description: List of pipelines
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PipelinesResponse"
              examples:
                success:
                  value:
                    message:
                      - group: dev
                        name: test
                        image: busybox:musl
                        steps:
                          - cmd: echo hello
        default:
          description: Failed listing of pipelines
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                failure:
                  value:
                    message: "Failed to fetch pipelines <some error message>"

  /resource-providers/{name}:
    post:
      operationId: ResourceProviderCreate
      summary: Creates a resource provider with its name and attributes

      parameters:
        - name: name
          required: true
          in: path
          description: Unique name of the resource provider
          schema:
            type: string

      requestBody:
        description: The attributes of the resource provider
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attrs:
                  $ref: "#/components/schemas/ResourceProviderAttributes"
            examples:
              attrs:
                value:
                  url: "http://my-resource-provider:8000"

      responses:
        "202":
          description: Successfully created a resource provider
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                success:
                  value:
                    message: "Ok"
        default:
          description: Failed to create a resource provider
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                failure:
                  value:
                    message: "Resource Provider may already be registered"
    delete:
      operationId: ResourceProviderDelete
      summary: Deletes a resource provider by name

      parameters:
        - name: name
          required: true
          in: path
          description: Unique name of the external resource
          schema:
            type: string

      responses:
        "202":
          description: Successfully delete a resource provider
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                success:
                  value:
                    message: "Ok"

  /resource-providers:
    get:
      operationId: ResourceProviderList
      summary: Lists all registered external resources by name

      responses:
        "200":
          description: List of resource providers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceProvidersResponse"
              examples:
                resource-providers:
                  value:
                    message:
                      - "github-provider"
                      - "salsa-provider"

  /artifact-stores/{name}:
    post:
      operationId: ArtifactStoreCreate
      summary: Creates an artifact store with its name and attributes

      parameters:
        - name: name
          required: true
          in: path
          description: Unique name of the artifact store
          schema:
            type: string

      requestBody:
        description: The attributes of the artifact store
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                attrs:
                  $ref: "#/components/schemas/ArtifactStoreAttributes"
            examples:
              attributes:
                value:
                  url: "http://my-artifact-store:8000"

      responses:
        "202":
          description: Successfully created an artifact store
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                success:
                  value:
                    message: "Ok"
        default:
          description: Failed to create an artifact store
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                failure:
                  value:
                    message: "Artifact Store may already be registered"
    delete:
      operationId: ArtifactStoreDelete
      summary: Deletes an artifact store by name

      parameters:
        - name: name
          required: true
          in: path
          description: Unique name of the artifact store
          schema:
            type: string

      responses:
        "202":
          description: Successfully delete an artifact store
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                success:
                  value:
                    message: "Ok"

  /artifact-stores:
    get:
      operationId: ArtifactStoreList
      summary: Lists all registered artifact stores by name

      responses:
        "200":
          description: List of artifact stores
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArtifactStoresResponse"
              examples:
                artifact-stores:
                  value:
                    message:
                      - "s3-store"
                      - "file-store"

  /query:
    get:
      operationId: Query
      summary: Runs a query on Crux, intended for point in time analytics

      parameters:
        - name: q
          description: Query to execute
          required: true
          in: query
          schema:
            type: string
        - name: t
          description: Point in time
          required: false
          in: query
          schema:
            type: date-time

      responses:
        "200":
          description: Successful query
          content:
            application/json:
              schema:
                type: object
              examples:
                sucess:
                  value: []

        default:
          description: Failed query
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleResponse"
              examples:
                unhealthy:
                  value:
                    message: "Query failed: <Error>"

components:
  schemas:
    SimpleResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string

    Resource:
      type: object
      required:
        - name
        - type
        - provider
      properties:
        name:
          type: string
          description: Unique name of the resource
        params:
          type: object
          description: The key-value pairs of params to be passed to the resource provider
        type:
          type: string
          enum:
            - external
        provider:
          type: string
          description: Unique name of the registered resource provider

    Artifact:
      type: object
      required:
        - name
        - path
        - store
      properties:
        name:
          type: string
          description: Unique name of the artifact
        path:
          type: string
          description: Path to the artifact in the container
        store:
          type: string
          description: Unique name of the registered store

    Step:
      type: object
      required:
        - cmd
      properties:
        cmd:
          type: string
          description: The command to execute
        needs_resource:
          type: string
          description: Name of the resource to mount before execution
        produces_artifact:
          $ref: "#/components/schemas/Artifact"

    Pipeline:
      type: object
      required:
        - steps
        - image
      properties:
        steps:
          type: array
          items:
            $ref: "#/components/schemas/Step"
          description: The list of steps to be executed sequentially
        image:
          type: string
          description: The container image to use
        vars:
          type: object
          description: The key-value pairs of environment variables
        resources:
          type: array
          items:
            $ref: "#/components/schemas/Resource"
          description: The list of declared resources

    StringList:
      type: array
      items:
        type: string

    PipelineLogsResponse:
      type: object
      required:
        - message
      properties:
        message:
          $ref: "#/components/schemas/StringList"
          description: The lines of logs from the pipeline run

    PipelinesResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: array
          items:
            type: object
            required:
              - name
              - data
            properties:
              name:
                type: string
              data:
                $ref: "#/components/schemas/Pipeline"

    StatusResponse:
      type: string
      enum:
        - running
        - passed
        - failed
        - stopped

    ResourceProvidersResponse:
      type: object
      required:
        - message
      properties:
        message:
          $ref: "#/components/schemas/StringList"
          description: The names of registered resource providers

    ResourceProviderAttributes:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          description: The reachable URL from Bob for the resource provider

    ArtifactStoreAttributes:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          description: The reachable URL from Bob for the artifact store

    ArtifactStoresResponse:
      type: object
      required:
        - message
      properties:
        message:
          $ref: "#/components/schemas/StringList"
          description: The names of registered artifact stores
