#   This file is part of Bob.
#
#   Bob is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   Bob is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with Bob. If not, see <http://www.gnu.org/licenses/>.

version: "2"

requests:
  healthCheck:
    request:
      url: "http://bob:7777/api/can-we-build-it"
      method: "GET"
    delay: 1000
    maxRetries: 30
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content.message"
        expect: "Yes we can! ðŸ”¨ ðŸ”¨"

  externalResourceRegistration:
    request:
      url: "http://bob:7777/api/external-resources/git"
      method: "POST"
      postData:
        mimeType: "application/json"
        text:
          url: "http://resource-git:8000"
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content.message"
        expect: "Ok"

  resourceReRegistrationFailure:
    request:
      url: "http://bob:7777/api/external-resources/git"
      method: "POST"
      postData:
        mimeType: "application/json"
        text:
          url: "http://resource-git:8000"
    validate:
      - jsonpath: "status"
        expect: 409
      - jsonpath: "content.message"
        expect: "Resource Provider may already be registered"

  artifactStoreRegistration:
    request:
      url: "http://bob:7777/api/artifact-stores/local"
      method: "POST"
      postData:
        mimeType: "application/json"
        text:
          url: "http://artifact-local:8001"
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content.message"
        expect: "Ok"

  secondArtifactStoreRegistration:
    request:
      url: "http://bob:7777/api/artifact-stores/s3"
      method: "POST"
      postData:
        mimeType: "application/json"
        text:
          url: "http://artifact-s3:8002"
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content.message"
        expect: "Ok"

  artifactReRegistration:
    request:
      url: "http://bob:7777/api/artifact-stores/local"
      method: "POST"
      postData:
        mimeType: "application/json"
        text:
          url: "http://artifact-local:8001"
    validate:
      - jsonpath: "status"
        expect: 409
      - jsonpath: "content.message"
        expect: "Artifact Store may already be registered"

  pipelineCreation:
    request:
      url: "http://bob:7777/api/pipelines/groups/dev/names/test"
      method: "POST"
      postData:
        mimeType: "application/json"
        text:
          image: "busybox:musl"
          vars:
            env: "test"
            url: "test.com"
          steps:
            - cmd: "echo hello"
            - cmd: "sleep 10"
            - cmd: "sh -c 'touch test.txt && echo $env >> test.txt'"
            - cmd: "cat test.txt"
              produces_artifact:
                name: "afile"
                path: "test.txt"
                store: "local"
            - needs_resource: "my-source"
              cmd: "ls"
              produces_artifact:
                name: "license-file"
                path: "LICENSE"
                store: "local"
          resources:
            - name: "my-source"
              type: "external"
              provider: "git"
              params:
                repo: "https://github.com/bob-cd/bob"
                branch: "master"
            - name: "another-source"
              type: "external"
              provider: "git"
              params:
                repo: "https://github.com/lispyclouds/clj-docker-client"
                branch: "master"
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content.message"
        expect: "Ok"

  failingPipelineCreation:
    request:
      url: "http://bob:7777/api/pipelines/groups/dev/names/this-fails"
      method: "POST"
      postData:
        mimeType: "application/json"
        text:
          image: "busybox:musl"
          steps:
            - cmd: "rcho hello"
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content.message"
        expect: "Ok"

  rePipelineCreationFailure:
    request:
      url: "http://bob:7777/api/pipelines/groups/dev/names/this-fails"
      method: "POST"
      postData:
        mimeType: "application/json"
        text:
          image: "busybox:musl"
          steps:
            - cmd: "rcho hello"
    validate:
      - jsonpath: "status"
        expect: 400
      - jsonpath: "content.message"
        expect: "Pipeline creation error: Check params or if its already created"

  pipelineStart:
    request:
      url: "http://bob:7777/api/pipelines/start/groups/dev/names/test"
      method: "POST"
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content.message"
        expect: "Ok"

  failingPipelineStart:
    request:
      url: "http://bob:7777/api/pipelines/start/groups/dev/names/this-fails"
      method: "POST"
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content.message"
        expect: "Ok"

  invalidPipelineStart:
    request:
      url: "http://bob:7777/api/pipelines/start/groups/dev/names/tes"
      method: "POST"
    validate:
      - jsonpath: "status"
        expect: 400
      - jsonpath: "content.message"
        expect: "No such pipeline"

  pipelineLogs:
    request:
      url: "http://bob:7777/api/pipelines/logs/groups/dev/names/test/number/1/offset/0/lines/50"
      method: "GET"
    delay: 40000
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content"
        expect:
          message:
            - "[bob] Pulling image busybox:musl"
            - "hello"
            - "test"
            - "[bob] Uploading artifact afile"
            - "[bob] Fetching and mounting resource my-source"
            - "CODE_OF_CONDUCT.md"
            - "CONTRIBUTING.md"
            - "Dockerfile"
            - "LICENSE"
            - "README.md"
            - "bob-entrypoint.sh"
            - "boot.properties"
            - "build.boot"
            - "deploy"
            - "docker-compose.yaml"
            - "integration-tests"
            - "resources"
            - "src"
            - "test"
            - "[bob] Uploading artifact license-file"
            - "[bob] Run successful"

  invalidPipelineLogs:
    request:
      url: "http://bob:7777/api/pipelines/logs/groups/dev/names/tes/number/1/offset/0/lines/1"
      method: "GET"
    validate:
      - jsonpath: "status"
        expect: 400
      - jsonpath: "content.message"
        expect: "Unable to fetch logs for this run"

  pipelineStatus:
    request:
      url: "http://bob:7777/api/pipelines/status/groups/dev/names/test/number/1"
      method: "GET"
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content.message"
        expect: "passed"

  invalidPipelineStatus:
    request:
      url: "http://bob:7777/api/pipelines/status/groups/dev/names/tes/number/1"
      method: "GET"
    validate:
      - jsonpath: "status"
        expect: 404
      - jsonpath: "content.message"
        expect: "No such pipeline"

  failedPipelineStatus:
    request:
      url: "http://bob:7777/api/pipelines/status/groups/dev/names/this-fails/number/1"
      method: "GET"
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content.message"
        expect: "failed"

  getPipelines:
    request:
      url: "http://bob:7777/api/pipelines"
      method: "GET"
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content[0].name"
        expect: "dev:test"
      - jsonpath: "content[1].name"
        expect: "dev:this-fails"

  getPipelinesByStatus:
    request:
      url: "http://bob:7777/api/pipelines?status=failed"
      method: "GET"
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content[0].name"
        expect: "dev:this-fails"

  getPipelinesByGroupAndName:
    request:
      url: "http://bob:7777/api/pipelines?group=dev&name=test"
      method: "GET"
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content[0].name"
        expect: "dev:test"

  pipelineArtifacts:
    request:
      url: "http://bob:7777/api/pipelines/groups/dev/names/test/number/1/artifacts/store/local/name/afile"
      method: "GET"
    validate:
      - jsonpath: "status"
        expect: 200

  pipelineArtifactsFromResource:
    request:
      url: "http://bob:7777/api/pipelines/groups/dev/names/test/number/1/artifacts/store/local/name/license-file"
      method: "GET"
    validate:
      - jsonpath: "status"
        expect: 200

  pipelineDeletion:
    request:
      url: "http://bob:7777/api/pipelines/groups/dev/names/test"
      method: "DELETE"
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content.message"
        expect: "Ok"

  externalResourceListing:
    request:
      url: "http://bob:7777/api/external-resources"
      method: "GET"
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content"
        expect:
          message:
            - "git"

  externalResourceDeletion:
    request:
      url: "http://bob:7777/api/external-resources/git"
      method: "DELETE"
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content.message"
        expect: "Ok"

  artifactStoresListing:
    request:
      url: "http://bob:7777/api/artifact-stores"
      method: "GET"
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content"
        expect:
          message:
            - name: "local"
              url: "http://artifact-local:8001"
            - name: "s3"
              url: "http://artifact-s3:8002"

  artifactStoreDeletion:
    request:
      url: "http://bob:7777/api/artifact-stores/local"
      method: "DELETE"
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content.message"
        expect: "Ok"

  blankExternalResourceListing:
    request:
      url: "http://bob:7777/api/external-resources"
      method: "GET"
    validate:
      - jsonpath: "status"
        expect: 200
      - jsonpath: "content"
        expect:
          message: []
