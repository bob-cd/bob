; Copyright 2018- Rahul De
;
; Use of this source code is governed by an MIT-style
; license that can be found in the LICENSE file or at
; https://opensource.org/licenses/MIT.

{:tasks {:init (do
                 (def apiserver-dir "apiserver")
                 (def runner-dir "runner")

                 (def prep-task "bb prep")
                 (def compile-task "bb compile")
                 (def test-task "bb test")
                 (def image-task "bb image")
                 (def push-task "bb push")
                 (def clean-task "bb clean")
                 ; TODO: Remove exclusions if moving to XT2 or upgrading 1.x
                 (def antq-task "clojure -Sdeps '{:deps {com.github.liquidz/antq {:mvn/version \"RELEASE\"}}}' -M -m antq.core outdated --upgrade --exclude=com.xtdb/xtdb-core --exclude=com.xtdb/xtdb-jdbc"))

         apiserver {:doc "Builds the apiserver"
                    :task (shell {:dir apiserver-dir} compile-task)}
         apiserver-prep {:doc "Prepares the deps of the apiserver"
                         :task (shell {:dir apiserver-dir} prep-task)}
         test-apiserver {:doc "Runs tests for the apiserver"
                         :task (shell {:dir apiserver-dir} test-task)}
         image-apiserver {:doc "Make a docker image of the apiserver"
                          :task (shell {:dir apiserver-dir} image-task)}
         push-apiserver {:doc "Push the docker image of the apiserver"
                         :task (shell {:dir apiserver-dir} push-task)}

         runner {:doc "Builds the runner"
                 :task (shell {:dir runner-dir} compile-task)}
         runner-prep {:doc "Prepares the deps of runner"
                      :task (shell {:dir runner-dir} prep-task)}
         test-runner {:doc "Runs tests for runner"
                      :task (shell {:dir runner-dir} test-task)}
         image-runner {:doc "Make a docker image of runner"
                       :task (shell {:dir runner-dir} image-task)}
         push-runner {:doc "Push the docker image of runner"
                      :task (shell {:dir runner-dir} push-task)}

         prep {:doc "Prepares the deps"
               :task (run '-prep)}
         -prep {:depends [apiserver-prep runner-prep]}

         compile {:doc "Compile all services"
                  :task (run '-compile {:parallel true})}
         -compile {:depends [apiserver runner]}

         ; TODO: Run in parallel with namespaced resources
         test {:doc "Run tests for all services"
               :task (run '-test)}
         -test {:depends [test-apiserver test-runner]}

         image {:doc "Build docker images for all services"
                :task (run '-image)}
         -image {:depends [image-apiserver image-runner]}

         clean {:doc "Clean up"
                :task (do
                        (shell {:dir apiserver-dir} clean-task)
                        (shell {:dir runner-dir} clean-task))}

         antq {:doc "Upgrade deps"
               :task (do
                       (println "Checking:" apiserver-dir)
                       (shell {:dir apiserver-dir} antq-task)
                       (println "Checking:" runner-dir)
                       (shell {:dir runner-dir} antq-task))}}}
